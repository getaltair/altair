# Pre-commit hooks configuration for Altair monorepo
# See https://pre-commit.com for more information

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: detect-private-key

  # Python: Ruff for linting and formatting
  # NOTE: Pre-commit auto-fixes issues for developer convenience,
  # but CI runs check-only mode. Both will catch the same issues.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      # Run the linter (auto-fix for developer convenience)
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # Run the formatter (auto-fix for developer convenience)
      - id: ruff-format

  # Python: Type checking with mypy
  # NOTE: Mypy checks are disabled in pre-commit for Python services
  # Each service has its own pyproject.toml with mypy configuration
  # and runs type checking in its own CI/CD pipeline

  # Markdown: Linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Secrets detection
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks

  # Flutter/Dart: Local hooks for formatting and analysis
  - repo: local
    hooks:
      # Dart format check (matches CI exactly)
      - id: dart-format
        name: Dart format
        entry: scripts/pre-commit/dart-format.sh
        language: script
        files: \.dart$
        pass_filenames: false
        description: Check Dart formatting with --set-exit-if-changed (matches CI)

      # Flutter analyze
      - id: flutter-analyze
        name: Flutter analyze
        entry: scripts/pre-commit/flutter-analyze.sh
        language: script
        files: \.dart$
        pass_filenames: false
        description: Run flutter analyze on all Flutter packages

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    style: auto fixes from pre-commit hooks

    Applied automatic fixes from pre-commit hooks
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
