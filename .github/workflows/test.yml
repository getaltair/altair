name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.30.0'
          channel: 'stable'
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev \
            liblzma-dev libstdc++-12-dev

      - name: Get dependencies
        working-directory: apps/altair_guidance
        run: flutter pub get

      - name: Verify formatting
        working-directory: apps/altair_guidance
        run: dart format --set-exit-if-changed .

      - name: Analyze code
        working-directory: apps/altair_guidance
        run: flutter analyze

      - name: Run unit tests with coverage
        working-directory: apps/altair_guidance
        run: flutter test --coverage --reporter expanded

      - name: Generate coverage report
        working-directory: apps/altair_guidance
        run: |
          # Install lcov for coverage reporting
          sudo apt-get install -y lcov
          # Generate HTML coverage report
          genhtml coverage/lcov.info -o coverage/html
          # Display coverage summary
          lcov --summary coverage/lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: apps/altair_guidance/coverage/lcov.info
          flags: unittests
          name: altair-guidance-coverage
          fail_ci_if_error: false

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: apps/altair_guidance/coverage/

      - name: Check coverage threshold
        working-directory: apps/altair_guidance
        run: |
          # Extract coverage percentage
          COVERAGE=$(lcov --summary coverage/lcov.info 2>&1 | grep "lines" | cut -d: -f2 | cut -d% -f1 | tr -d ' ')
          echo "Current coverage: ${COVERAGE}%"

          # Set minimum coverage threshold (currently 30%, should increase over time)
          THRESHOLD=30

          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "Coverage ${COVERAGE}% is below threshold ${THRESHOLD}%"
            exit 1
          fi

          echo "Coverage ${COVERAGE}% meets threshold ${THRESHOLD}%"

  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.30.0'
          channel: 'stable'
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev \
            liblzma-dev libstdc++-12-dev \
            xvfb libglu1-mesa

      - name: Get dependencies
        working-directory: apps/altair_guidance
        run: flutter pub get

      - name: Run integration tests
        working-directory: apps/altair_guidance
        run: |
          # Run integration tests with virtual display
          xvfb-run -a flutter test integration_test/ --reporter expanded
        continue-on-error: true

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: apps/altair_guidance/TEST_RESULTS.json

  build:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.30.0'
          channel: 'stable'
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev \
            liblzma-dev libstdc++-12-dev

      - name: Get dependencies
        working-directory: apps/altair_guidance
        run: flutter pub get

      - name: Build Linux app
        working-directory: apps/altair_guidance
        run: flutter build linux --release

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: apps/altair_guidance/build/linux/x64/release/bundle/
